/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kalkulator;

/**
 *
 * @author m salman alfarisi
 */
public class Biner extends javax.swing.JFrame {

    /**
     * Creates new form Biner
     */
    public Biner() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        warning = new javax.swing.JOptionPane();
        panelpilihan = new javax.swing.JLabel();
        Output = new javax.swing.JComboBox<>();
        panelout = new javax.swing.JLabel();
        panelin = new javax.swing.JLabel();
        btnkonversi = new javax.swing.JButton();
        teksin = new javax.swing.JTextField();
        teksout = new javax.swing.JTextField();
        Input = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Konverter Bilangan");
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);

        panelpilihan.setText("Pilihan");

        Output.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Biner", "Oktal", "Hexa", "Desimal" }));
        Output.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OutputActionPerformed(evt);
            }
        });

        panelout.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        panelout.setText("Output Biner:");

        panelin.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        panelin.setText("Input Desimal:");

        btnkonversi.setText("Konversi");
        btnkonversi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnkonversiActionPerformed(evt);
            }
        });

        Input.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Desimal", "Biner", "Hexa", "Oktal" }));
        Input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Output, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelin, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                    .addComponent(panelout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(teksout, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(teksin)
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelpilihan, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(btnkonversi)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelpilihan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Output, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(panelin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teksin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelout, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(teksout))
                .addGap(18, 18, 18)
                .addComponent(btnkonversi)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OutputActionPerformed
        // TODO add your handling code here:
        if(Output.getSelectedItem()=="Hexa"){
            panelout.setText("Input Hexadesimal:");
        }
        if(Output.getSelectedItem()=="Biner"){
            panelout.setText("Input Biner:");
        }
        if(Output.getSelectedItem()=="Desimal"){
            panelout.setText("Input Desimal:");
        }
        if(Output.getSelectedItem()=="Oktal"){
            panelout.setText("Input Oktal:");
        }
    }//GEN-LAST:event_OutputActionPerformed

    private void btnkonversiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnkonversiActionPerformed
        // TODO add your handling code here:
        try{
            //hexa
            if(Input.getSelectedItem()=="Hexa"){
                if(Output.getSelectedItem()=="Desimal"){
                    int t=Integer.parseInt(teksin.getText(),16);
                    teksout.setText(Integer.toUnsignedString(t));
                }
                else if(Output.getSelectedItem()=="Biner"){
                    int t=Integer.parseInt(teksin.getText(),16);
                    String i=Integer.toUnsignedString(t);
                    int hasil=Integer.parseInt(i);
                    teksout.setText(Integer.toBinaryString(hasil));
                }
                else if(Output.getSelectedItem()=="Oktal"){
                    int t=Integer.parseInt(teksin.getText(),16);
                    String i=Integer.toUnsignedString(t);
                    int hasil=Integer.parseInt(i);
                    teksout.setText(Integer.toOctalString(hasil));
                }
                else{
                    warning.showMessageDialog(null,"masukkan input yang benar");
                }
            }
            //oktal
            else if(Input.getSelectedItem()=="Oktal"){
                if(Output.getSelectedItem()=="Desimal"){
                    int t=Integer.parseInt(teksin.getText(),8);
                    teksout.setText(Integer.toUnsignedString(t));
                }
                else if(Output.getSelectedItem()=="Biner"){
                    int t=Integer.parseInt(teksin.getText(),8);
                    String i=Integer.toUnsignedString(t);
                    int hasil=Integer.parseInt(i);
                    teksout.setText(Integer.toBinaryString(hasil));
                }
                else if(Output.getSelectedItem()=="Hexa"){
                    int t=Integer.parseInt(teksin.getText(),8);
                    String i=Integer.toUnsignedString(t);
                    int hasil=Integer.parseInt(i);
                    teksout.setText(Integer.toHexString(hasil));
                }
                else{
                    warning.showMessageDialog(null,"masukkan input yang benar");
                }
            }
            //biner
            else if(Input.getSelectedItem()=="Biner"){
                if(Output.getSelectedItem()=="Desimal"){
                    int t=Integer.parseInt(teksin.getText(),2);
                    teksout.setText(Integer.toUnsignedString(t));
                }
                else if(Output.getSelectedItem()=="Hexa"){
                    int t=Integer.parseInt(teksin.getText(),2);
                    String i=Integer.toUnsignedString(t);
                    int hasil=Integer.parseInt(i);
                    teksout.setText(Integer.toHexString(hasil));
                }
                else if(Output.getSelectedItem()=="Oktal"){
                    int t=Integer.parseInt(teksin.getText(),2);
                    String i=Integer.toUnsignedString(t);
                    int hasil=Integer.parseInt(i);
                    teksout.setText(Integer.toOctalString(hasil));
                }
                else{
                    warning.showMessageDialog(null,"masukkan input yang benar");
                }
            }
            //desimal
            else if(Input.getSelectedItem()=="Desimal"){
                if(Output.getSelectedItem()=="Oktal"){
                    int t=Integer.parseInt(teksin.getText());
                    String i=Integer.toUnsignedString(t);
                    int hasil=Integer.parseInt(i);
                    teksout.setText(Integer.toOctalString(hasil));
                }
                else if(Output.getSelectedItem()=="Biner"){
                    int t=Integer.parseInt(teksin.getText());
                    String i=Integer.toUnsignedString(t);
                    int hasil=Integer.parseInt(i);
                    teksout.setText(Integer.toBinaryString(hasil));
                }
                else if(Output.getSelectedItem()=="Hexa"){
                    int t=Integer.parseInt(teksin.getText());
                    String i=Integer.toUnsignedString(t);
                    int hasil=Integer.parseInt(i);
                    teksout.setText(Integer.toHexString(hasil));
                }
                else{
                    warning.showMessageDialog(null,"masukkan input yang benar");
                }
            }
        }catch(NumberFormatException ex){
            warning.showMessageDialog(null,"masukkan input yang benar");
        }
    }//GEN-LAST:event_btnkonversiActionPerformed

    private void InputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputActionPerformed
        // TODO add your handling code here:
        if(Input.getSelectedItem()=="Hexa"){
            panelin.setText("Input Hexadesimal:");
        }
        if(Input.getSelectedItem()=="Biner"){
            panelin.setText("Input Biner:");
        }
        if(Input.getSelectedItem()=="Desimal"){
            panelin.setText("Input Desimal:");
        }
        if(Input.getSelectedItem()=="Oktal"){
            panelin.setText("Input Oktal:");
        }
    }//GEN-LAST:event_InputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Biner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Biner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Biner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Biner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Biner().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Input;
    private javax.swing.JComboBox<String> Output;
    private javax.swing.JButton btnkonversi;
    private javax.swing.JLabel panelin;
    private javax.swing.JLabel panelout;
    private javax.swing.JLabel panelpilihan;
    private javax.swing.JTextField teksin;
    private javax.swing.JTextField teksout;
    private javax.swing.JOptionPane warning;
    // End of variables declaration//GEN-END:variables
}
